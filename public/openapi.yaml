openapi: 3.0.3
info:
  title: News API with auth
  description: DevGroup test
  version: 1.0.0
servers:
  - url: http://localhost:8080/api
tags:
  - name: Authorization
  - name: News
paths:
  /auth/sign-up:
    post:
      tags:
        - Authorization
      summary: Register
      operationId: SignUp
      requestBody:
        $ref: '#/components/requestBodies/SignUpInput'
      responses:
        '200':
          $ref: '#/components/responses/User'
        '400':
          $ref: '#/components/responses/GenericError'
        '422':
          $ref: '#/components/responses/GenericError'
      x-codegen-request-body-name: body
  /auth/login:
    post:
      tags:
        - Authorization
      summary: Login
      description: Sign in to the app. Returns cookies, access_token, refresh_token, logged_in
      operationId: SignIn
      requestBody:
        $ref: '#/components/requestBodies/SignInInput'
      responses:
        '200':
          $ref: '#/components/responses/LoginRes'
        '400':
          $ref: '#/components/responses/GenericError'
        '422':
          $ref: '#/components/responses/GenericError'
      x-codegen-request-body-name: body
  /auth/logout:
    get:
      tags:
        - Authorization
      security:
        - access_token: [ ]
        - Authorization: [ ]
      summary: Logout
      description: Destroys all cookies, finishes local session, saved on the server
      operationId: Logout
      responses:
        '201':
          $ref: '#/components/responses/EmptyOkResponse'
        '400':
          $ref: '#/components/responses/GenericError'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/GenericError'
  /auth/refresh:
    get:
      tags:
        - Authorization
      security:
        - refresh_token: [ ]
      summary: Refresh token
      description: Sets new access_token and logged_in(HTTPOnly:false). refresh_token stays the same until expires
      operationId: RefreshToken
      responses:
        '201':
          $ref: '#/components/responses/AccessToken'
        '400':
          $ref: '#/components/responses/GenericError'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/GenericError'
  /auth/me:
    get:
      tags:
        - Authorization
      security:
        - access_token: [ ]
        - Authorization: [ ]
      summary: Get me
      description: Get info about currently authorized user
      operationId: GetMe
      responses:
        '200':
          $ref: '#/components/responses/User'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Unauthorized'
        '422':
          $ref: '#/components/responses/GenericError'
  /list:
    get:
      tags:
        - News
      summary: Get all news
      security:
        - access_token: [ ]
        - Authorization: [ ]
      operationId: NewsList
      parameters:
        - $ref: '#/components/parameters/offsetParam'
        - $ref: '#/components/parameters/limitParam'
      responses:
        '200':
          $ref: '#/components/responses/ManyNews'
        '400':
          $ref: '#/components/responses/GenericError'
        '422':
          $ref: '#/components/responses/GenericError'
      x-codegen-request-body-name: body
  /add:
    post:
      tags:
        - News
      summary: Add news
      description: Add new news
      security:
        - access_token: [ ]
        - Authorization: [ ]
      operationId: GetManyNews
      requestBody:
        $ref: '#/components/requestBodies/CreateNewsInput'
      responses:
        '201':
          $ref: '#/components/responses/OneNews'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '400':
          $ref: '#/components/responses/GenericError'
        '422':
          $ref: '#/components/responses/GenericError'
      x-codegen-request-body-name: body
  /edit/{id}:
    put:
      tags:
        - News
      security:
        - access_token: [ ]
        - Authorization: [ ]
      summary: Update news
      description: Update existing news
      operationId: UpdateNews
      requestBody:
        $ref: '#/components/requestBodies/UpdateNewsInput'
      responses:
        '201':
          $ref: '#/components/responses/OneNews'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '400':
          $ref: '#/components/responses/GenericError'
        '422':
          $ref: '#/components/responses/GenericError'
components:
  parameters:
    offsetParam:
      in: query
      name: offset
      required: false
      schema:
        type: integer
        minimum: 1
        default: 0
        example: 10
      description: The number of items to skip before starting to collect the result set
    limitParam:
      in: query
      name: limit
      required: false
      schema:
        type: integer
        minimum: 1
        default: 20
      description: The numbers of items to return.
  securitySchemes:
    access_token:
      description: |
        You have to have access token in access token cookie to authorize request
      type: apiKey
      name: access_token
      in: cookie
    refresh_token:
      description: |
        Refresh token is used to gain new access token
      type: apiKey
      name: refresh_token
      in: cookie
    Authorization:
      type: apiKey
      name: Authorization
      in: header
      description: |
        Prefix the value with "Authorization" to indicate the custom authorization type
  responses:
    ManyNews:
      description: Actors array
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: true
              data:
                type: array
                items:
                  $ref: '#/components/schemas/News'
              pagination:
                $ref: '#/components/schemas/Pagination'
    OneNews:
      description: One news
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/News'
    User:
      description: User
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: true
              data:
                $ref: '#/components/schemas/User'
    LoginRes:
      description: User, access token, refresh_token, logged_in
      headers:
        Set-Cookie:
          schema:
            type: string
            example: access_token httponly, refresh_token httponly, logged_in boolean
      content:
        application/json:
          schema:
            type: object
            properties:
              access_token:
                type: string
              user:
                $ref: '#/components/schemas/User'
    AccessToken:
      description: Access token
      headers:
        Set-Cookie:
          schema:
            type: string
            example: access_token httponly, logged_in boolean
      content:
        application/json:
          schema:
            type: object
            properties:
              access_token:
                type: string
                example: secureToken
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              message:
                type: string
                example: no access token
    GenericError:
      description: String error
      content:
        application/json:
          schema:
            type: object
            properties:
              success:
                type: boolean
                example: false
              message:
                type: string
                example: something went wrong
    EmptyOkResponse:
      description: No content
      content:
        text/html:
          schema:
            type: string
  requestBodies:
    CreateNewsInput:
      required: true
      description: Create news
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateNewsInput'
    UpdateNewsInput:
      required: true
      description: Update news
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateNewsInput'
    SignUpInput:
      required: true
      description: Register a user
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SignUpInput'
    SignInInput:
      required: true
      description: Login
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SignInInput'
  schemas:
    Pagination:
      required:
        - total
        - limit
        - offset
      type: object
      properties:
        total:
          type: integer
          example: 25
        limit:
          type: integer
          example: 20
        offset:
          type: integer
          example: 0
    News:
      required:
        - id
        - title
        - content
        - updated_at
      type: object
      properties:
        id:
          type: integer
          example: 1
        title:
          type: string
          example: New Toyota Avalon
        content:
          type: string
          example:  Toyota Avalon starts at $37,920 and goes up to $45,245 depending on the trim and options
        categories:
          type: array
          items:
            type: integer
          example: [1, 2, 3]
        updated_at:
          type: string
          format: date-time
          example: 01.02.2024
    CreateNewsInput:
      required:
        - title
        - content
      type: object
      properties:
        title:
          type: string
          example: Russia
        content:
          type: string
          example: Various content about Russia
        categories:
          type: array
          items:
            type: integer
          example: [ 1, 2, 3 ]
    UpdateNewsInput:
      type: object
      properties:
        title:
          type: string
          example: Russia
        content:
          type: string
          example: Various content about Russia
        categories:
          type: array
          items:
            type: integer
          example: [ 1, 2, 3 ]
    User:
      required:
        - id
        - name
        - email
        - updated_at
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: John
        email:
          type: string
          example: john@mail.com
        updated_at:
          type: string
          format: date-time
          example: 02.03.2020
    SignUpInput:
      required:
        - name
        - email
        - password
      properties:
        name:
          type: string
          example: Me
        email:
          type: string
          example: me@mail.com
        password:
          type: string
          minLength: '8'
          example: kkkkkkkk
    SignInInput:
      required:
        - email
        - password
      properties:
        email:
          type: string
          example: me@mail.com
        password:
          type: string
          minLength: '8'
          example: kkkkkkkk